# 全局配置 woker数量
worker_processes  1;

# 配置与网络连接相关
events {
    worker_connections  1024;
}

# 配置代理\缓存\日志记录\虚拟主机配置等
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    # 配置负载均衡upstream
    # upstream targetserver{
    #     #定义一组服务器组 默认权重1:1
    #     server 192.168.2.8;
    #     server 192.168.2.9;
    #     # 配置权重 其他策略 按ip/最少连接/按url/响应时间(ip_hash/least_conn/url_hash/fair)
    #     # server 192.168.2.8 weight=10;
    #     # server 192.168.2.9 weight=5;
    # }
    server {
        listen       80; #监听80端口,将访问nginx服务器80端口的请求按location配置进行转发
        server_name  localhost; #服务器域名()

        location / {
            root   html/dist; #nginx服务器首页静态资源目录
            index  index.html; #nginx服务器首页
        }
        #匹配 /api/开头的路径
        location ^~ /api/ {
            rewrite ^/api/(.*)$ /$1 break; # $1获取第一个()中的路径
            proxy_pass http://192.168.2.8:8080; #反向代理主机http
        }

        # location / {
        #     root   html; #加载html目录的资源
        #     index  index.html index.htm; #资源名(可配多个用空格分割,依次匹配)
        # }

        # 配置反向代理
        # location / {
        #     proxy_pass http://150.158.44.4:8080; #目标服务器
        # }

        #配置负载均衡location
        # location / {
        #     #默认轮询策略
        #     proxy_pass http://targetserver; #目标服务器组
        # }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
